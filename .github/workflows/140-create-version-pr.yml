name: 140 Create version pull request

on:
  workflow_dispatch:
    inputs:
      versionMajor:
        description: 'バージョン情報: major'
        required: true
        type: string
      versionMinor:
        description: 'バージョン情報: minor'
        required: true
        type: string
      versionPatch:
        description: 'バージョン情報: patch'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  create-version-pr:
    if: ${{ github.ref_type == 'branch' }}
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: write
      pull-requests: write
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4

      # https://github.com/actions/setup-java
      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version-file: '.java-version'

      - name: Update version
        id: version
        run: |
          jshell -R-Dargs="${{ inputs.versionMajor }} ${{ inputs.versionMinor }} ${{ inputs.versionPatch }}" .github/scripts/set-version.jsh
          tag=$(jshell .github/scripts/get-version-name.jsh)
          bash .github/scripts/can-release.bash $tag
          echo "branch-name=feature/update_$tag" >> "$GITHUB_OUTPUT"
          echo "message=バージョン更新: $tag" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}

      # https://github.com/tshion/apply-git-user
      - uses: tshion/apply-git-user@2.0.4
        with:
          user: github-actions

      - name: Git push
        run: |
          git switch --create ${{ steps.version.outputs.branch-name }}
          git add trykmmlib/build.properties
          git commit --message "${{ steps.version.outputs.message }}"
          git push --set-upstream origin ${{ steps.version.outputs.branch-name }}

      - name: Create a file for pull request's body
        shell: ruby {0}
        run: |
          text = <<BODY
            ## 確認事項
            * [ ] 意図したバージョンが設定されている
            * [ ] ビルド出来る
          BODY
          File.open("PR_BODY", "w") { |file|
            file.write(text)
          }

      - name: Create pull request
        run: |
          gh pr create --base ${{ github.ref_name }} --title "${{ steps.version.outputs.message }}" --body-file PR_BODY
        env:
          GH_TOKEN: ${{ github.token }}
