name: 181 Deploy ios library

on:
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}
  cancel-in-progress: true

jobs:
  check:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.meta.outputs.tag }}
    steps:
      # https://github.com/actions/checkout
      - uses: actions/checkout@v4
  
      # https://github.com/actions/setup-java
      - uses: actions/setup-java@v4
        with:
          distribution: 'microsoft'
          java-version-file: '.java-version'

      - name: Check version
        id: meta
        run: |
          tag=$(jshell .github/scripts/get-version-name.jsh)
          echo "tag=$tag" >> "$GITHUB_OUTPUT"
          bash .github/scripts/can-release.bash $tag
        env:
          GH_TOKEN: ${{ github.token }}


  build:
    needs:
      - check
    # https://github.com/actions/runner-images
    runs-on: macos-14
    outputs:
      zipname: ${{ steps.name.outputs.zipname }}
    steps:
        # https://github.com/actions/checkout
        - uses: actions/checkout@v4

        # https://github.com/actions/setup-java
        - name: set up JDK
          uses: actions/setup-java@v4
          with:
            distribution: 'microsoft'
            java-version-file: '.java-version'

        # https://github.com/gradle/actions
        - uses: gradle/actions/setup-gradle@v3
          with:
            gradle-home-cache-cleanup: true

        # https://github.com/XcodesOrg/xcodes
        - run: xcodes select

        - name: Build
          run: |
            chmod +x gradlew
            ./gradlew trykmmlib:assembleTryKMMLibReleaseXCFramework

        - name: Define zip name
          id: name
          run: |
            name="trykmmlib-ios_${{ needs.check.outputs.tag }}"
            echo "zipname=$name" >> "$GITHUB_OUTPUT"
            echo $name

        # https://github.com/actions/upload-artifact
        - uses: actions/upload-artifact@v4
          with:
            name: ${{ steps.name.outputs.zipname }}
            path: ./trykmmlib/build/XCFrameworks/release/*.xcframework


  upload-binary:
    needs:
      - check
      - build
    runs-on: ubuntu-latest
    steps:
      # https://github.com/actions/create-github-app-token
      - name: Create token for dist repository
        uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
          owner: ${{ github.repository_owner }}
          repositories: "TryKMMRepo"

      # https://github.com/actions/checkout
      - name: Checkout dist repository
        uses: actions/checkout@v4
        with:
          repository: ${{ github.repository_owner }}/TryKMMRepo
          token: ${{ steps.app-token.outputs.token }}

      - name: Delete previous binaries
        run: rm -rf *.xcframework

      # https://github.com/actions/download-artifact
      - uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.zipname }}

      # https://github.com/tshion/apply-git-user
      - uses: tshion/apply-git-user@2.0.2
        with:
          user: github-actions

      - name: Git push
        run: |
          git add --all *.xcframework/*
          git commit --message "Release ${{ needs.check.outputs.tag }} for iOS"
          git push origin

      - name: Set git tag
        run: |
          git tag ${{ needs.check.outputs.tag }}
          git push origin ${{ needs.check.outputs.tag }}


  upload-podspec:
    needs:
      - upload-binary
    uses: ./.github/workflows/181a-upload-podspec.yml
    secrets:
      PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
